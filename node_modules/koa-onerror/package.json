{
  "_args": [
    [
      {
        "raw": "koa-onerror@^1.2.1",
        "scope": null,
        "escapedName": "koa-onerror",
        "name": "koa-onerror",
        "rawSpec": "^1.2.1",
        "spec": ">=1.2.1 <2.0.0",
        "type": "range"
      },
      "C:\\www\\nodejs\\koa\\koa2\\kuaiyidian"
    ]
  ],
  "_from": "koa-onerror@>=1.2.1 <2.0.0",
  "_id": "koa-onerror@1.3.1",
  "_inCache": true,
  "_location": "/koa-onerror",
  "_nodeVersion": "4.2.4",
  "_npmOperationalInternal": {
    "host": "packages-13-west.internal.npmjs.com",
    "tmp": "tmp/koa-onerror-1.3.1.tgz_1458545888486_0.515365281375125"
  },
  "_npmUser": {
    "name": "dead_horse",
    "email": "dead_horse@qq.com"
  },
  "_npmVersion": "3.8.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "koa-onerror@^1.2.1",
    "scope": null,
    "escapedName": "koa-onerror",
    "name": "koa-onerror",
    "rawSpec": "^1.2.1",
    "spec": ">=1.2.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/koa-onerror/-/koa-onerror-1.3.1.tgz",
  "_shasum": "a5b561e1c87ef3289e4301746e01382f24ffbe22",
  "_shrinkwrap": null,
  "_spec": "koa-onerror@^1.2.1",
  "_where": "C:\\www\\nodejs\\koa\\koa2\\kuaiyidian",
  "author": {
    "name": "dead_horse",
    "email": "dead_horse@qq.com"
  },
  "bugs": {
    "url": "https://github.com/koajs/onerror/issues"
  },
  "dependencies": {
    "copy-to": "~2.0.1",
    "swig": "~1.4.2"
  },
  "description": "koa error handler, hack ctx.onerror",
  "devDependencies": {
    "autod": "*",
    "co-sleep": "~0.0.1",
    "istanbul-harmony": "*",
    "jshint": "*",
    "koa": "~0.20.0",
    "mocha": "*",
    "pedding": "~1.0.0",
    "should": "*",
    "supertest": "~0.15.0"
  },
  "directories": {},
  "dist": {
    "shasum": "a5b561e1c87ef3289e4301746e01382f24ffbe22",
    "tarball": "https://registry.npmjs.org/koa-onerror/-/koa-onerror-1.3.1.tgz"
  },
  "files": [
    "index.js",
    "error.html"
  ],
  "gitHead": "940e39e943ecbb91a57dbe204be38f1022344af2",
  "homepage": "https://github.com/koajs/onerror",
  "keywords": [
    "koa",
    "middleware",
    "error"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "dead_horse",
      "email": "dead_horse@qq.com"
    },
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    }
  ],
  "name": "koa-onerror",
  "optionalDependencies": {},
  "readme": "koa-onerror\n=================\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Gittip][gittip-image]][gittip-url]\n[![David deps][david-image]][david-url]\n\n[npm-image]: https://img.shields.io/npm/v/koa-onerror.svg?style=flat\n[npm-url]: https://npmjs.org/package/koa-onerror\n[travis-image]: https://img.shields.io/travis/koajs/onerror.svg?style=flat\n[travis-url]: https://travis-ci.org/koajs/onerror\n[coveralls-image]: https://img.shields.io/coveralls/koajs/onerror.svg?style=flat\n[coveralls-url]: https://coveralls.io/r/koajs/onerror?branch=master\n[gittip-image]: https://img.shields.io/gittip/dead_horse.svg?style=flat\n[gittip-url]: https://www.gittip.com/dead-horse/\n[david-image]: https://img.shields.io/david/koajs/onerror.svg?style=flat\n[david-url]: https://david-dm.org/koajs/onerror\n\nan error handler for koa, hack ctx.onerror.\n\ndifferent with [koa-error](https://github.com/kosjs/koa):\n- we can not just use try catch to handle all errors, steams' and events'\nerrors are directly handle by `ctx.onerror`, so if we want to handle all\nerrors in one place, the only way i can see is to hack `ctx.onerror`.\n- it is more customizable.\n\n## install\n\n```bash\nnpm install koa-onerror\n```\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar koa = require('koa');\nvar onerror = require('koa-onerror');\nvar app = koa();\n\nonerror(app);\n\napp.use(function *(){\n  // foo();\n  this.body = fs.createReadStream('not exist');\n});\n```\n\n## Options\n\n```\nonerror(app, options);\n```\n\n* **all**: if options.all exist, ignore negotiation\n* **text**: text error handler\n* **json**: json error handler\n* **html**: html error handler\n* **template**: default html error handler template path\n* **redirect**: if accepct html, can redirect to another error page\n\ncheck out default handler to write your own handler.\n\n## Status and Headers\n\n`koa-onerror` will automatic set `err.status` as response status code, and `err.headers` as response headers.\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/koajs/onerror.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "1.3.1"
}
